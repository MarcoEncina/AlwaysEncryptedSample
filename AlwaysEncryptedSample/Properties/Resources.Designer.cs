//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlwaysEncryptedSample.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AlwaysEncryptedSample.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///		QUOTENAME(DB_NAME()) + &apos;.&apos; + QUOTENAME(s.name) + &apos;.&apos; +
        ///		QUOTENAME(t.name) AS FQTN,
        ///		s.name AS [Schema],
        ///		t.name AS [Table],
        ///		c.name AS ColumnName,
        ///		ct.name AS ColumnType,
        ///		c.max_length AS Length,
        ///		c.collation_name AS Collation,
        ///		c.is_nullable AS Nullable,
        ///		c.encryption_type_desc as EncryptionType,
        ///		c.generated_always_type_desc AS GeneratedAlways
        ///	FROM 
        ///		sys.columns c
        ///		INNER JOIN sys.types ct ON c.system_type_id = ct.system_type_id
        ///		INNER JOIN sys.tables t ON c.object_id  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EncryptedColumnsSQL {
            get {
                return ResourceManager.GetString("EncryptedColumnsSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE [Logging].[Log] (
        ///	[Id] [int] IDENTITY (1, 1) NOT NULL
        ///		CONSTRAINT PK_Log PRIMARY KEY  CLUSTERED,
        ///	[Date] [datetime] NOT NULL,
        ///	[Thread] [varchar] (255) NOT NULL,
        ///	[Level] [varchar] (50) NOT NULL,
        ///	[Logger] [varchar] (255) NOT NULL,
        ///	[User] [nvarchar] (50) NULL,
        ///	[ClientIP]
        ///		[nvarchar](45) -- Why 45? Because IPv6 Why Nvarchar? Because Log4Net
        ///		COLLATE  Latin1_General_BIN2
        ///		ENCRYPTED WITH (
        ///		    COLUMN_ENCRYPTION_KEY = LogColumnsKey,
        ///            ENCRYPTION_TYPE = DETERMINISTIC, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Log4NetDDL {
            get {
                return ResourceManager.GetString("Log4NetDDL", resourceCulture);
            }
        }
    }
}
